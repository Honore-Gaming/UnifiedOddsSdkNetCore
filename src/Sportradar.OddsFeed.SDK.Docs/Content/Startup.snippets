<?xml version="1.0" encoding="utf-8" ?>
<!-- This is an example code snippets file -->
<examples>
	<item id="Startup#Basic">
		<sampleCode language="CSharp">
var config = UofSdk.GetConfigurationBuilder().BuildFromConfigFile();

var uofSdk = new UofSdk(config);

var session = uofSdk.GetSessionBuilder().SetMessageInterest(MessageInterest.AllMessages).Build();

uofSdk.ProducerUp += OnProducerUp;
uofSdk.ProducerDown += OnProducerDown;
uofSdk.Disconnected += OnDisconnected;
uofSdk.Closed += OnClosed;

session.OnUnparsableMessageReceived += SessionOnUnparsableMessageReceived;
session.OnBetCancel += SessionOnBetCancel;
session.OnBetSettlement += SessionOnBetSettlement;
session.OnBetStop += SessionOnBetStop;
session.OnFixtureChange += SessionOnFixtureChange;
session.OnOddsChange += SessionOnOddsChange;
session.OnRollbackBetCancel += SessionOnRollbackBetCancel;
session.OnRollbackBetSettlement += SessionOnRollbackBetSettlement;

uofSdk.Open();
		</sampleCode>
	</item>

	<item id="Startup#Advanced">
		<sampleCode language="CSharp">
var config = UofSdk.GetConfigurationBuilder().BuildFromConfigFile();

var uofSdk = new UofSdk(config);

AttachToFeedEvents(uofSdk);

var sessionLive = uofSdk.GetSessionBuilder().SetMessageInterest(MessageInterest.LiveMessagesOnly).Build();
var sessionPre = uofSdk.GetSessionBuilder().SetMessageInterest(MessageInterest.PrematchMessagesOnly).Build();

AttachToSessionEvents(sessionLive);
AttachToSessionEvents(sessionPre);

uofSdk.Open();
		</sampleCode>
	</item>

	<item id="Startup#AddTimestampBeforeDisconnect">
		<sampleCode language="CSharp">
uofSdk.ProducerManager.AddTimestampBeforeDisconnect(1, DateTime.Now.AddMinutes(-10));
uofSdk.ProducerManager.AddTimestampBeforeDisconnect(3, DateTime.Now.AddMinutes(-10));
		</sampleCode>
	</item>

	<item id="Startup#DisableProducer">
		<sampleCode language="CSharp">
uofSdk.ProducerManager.DisableProducer(1);
		</sampleCode>
	</item>

	<item id="SportDataProvider#GetSportEvent">
		<sampleCode language="CSharp">
var sportEvent = uofSdk.SportDataProvider.GetSportEvent(Urn.Parse("sr:match:123456"));
if (sportEvent is IMatch match)
{

}
		</sampleCode>
	</item>

	<item id="SportDataProvider#GetTournament">
		<sampleCode language="CSharp">
var longTermEvent = uofSdk.SportDataProvider.GetTournament(Urn.Parse("sr:tournament:1234"));
if (longTermEvent is ITournament tournament)
{

}
		</sampleCode>
	</item>

	<item id="SportDataProvider#GetLiveSportEvents">
		<sampleCode language="CSharp">
var competitions = await uofSdk.SportDataProvider.GetLiveSportEventsAsync().ConfigureAwait(false);
foreach (var competition in competitions)
{
	if (competition is IMatch match)
	{

	}
}
		</sampleCode>
	</item>

	<item id="SportDataProvider#GetSportEventsByDate">
		<sampleCode language="CSharp">
var competitions = await uofSdk.SportDataProvider.GetSportEventsByDateAsync(DateTime.Now.AddDays(1)).ConfigureAwait(false);
foreach (var competition in competitions)
{
	if (competition is IMatch match)
	{

	}
}
		</sampleCode>
	</item>
</examples>

